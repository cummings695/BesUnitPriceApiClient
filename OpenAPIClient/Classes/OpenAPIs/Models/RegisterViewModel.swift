//
// RegisterViewModel.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public final class RegisterViewModel: Codable, JSONEncodable, Hashable {

    static let passKeyRule = StringRule(minLength: 1, maxLength: nil, pattern: nil)
    public var passKey: String
    public var user: UserPostViewModel?
    public var restaurant: RestaurantPostViewModel?
    public var billing: BillingPostViewModel?

    public init(passKey: String, user: UserPostViewModel? = nil, restaurant: RestaurantPostViewModel? = nil, billing: BillingPostViewModel? = nil) {
        self.passKey = passKey
        self.user = user
        self.restaurant = restaurant
        self.billing = billing
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case passKey
        case user
        case restaurant
        case billing
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(passKey, forKey: .passKey)
        try container.encodeIfPresent(user, forKey: .user)
        try container.encodeIfPresent(restaurant, forKey: .restaurant)
        try container.encodeIfPresent(billing, forKey: .billing)
    }

    public static func == (lhs: RegisterViewModel, rhs: RegisterViewModel) -> Bool {
        lhs.passKey == rhs.passKey &&
        lhs.user == rhs.user &&
        lhs.restaurant == rhs.restaurant &&
        lhs.billing == rhs.billing
        
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(passKey.hashValue)
        hasher.combine(user?.hashValue)
        hasher.combine(restaurant?.hashValue)
        hasher.combine(billing?.hashValue)
        
    }
}

