//
// BaseFilter.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public final class BaseFilter: Codable, JSONEncodable, Hashable {

    public var advancedSearch: BaseFilterAdvancedSearch?
    public var keyword: String?
    public var advancedFilter: BaseFilterAdvancedFilter?

    public init(advancedSearch: BaseFilterAdvancedSearch? = nil, keyword: String? = nil, advancedFilter: BaseFilterAdvancedFilter? = nil) {
        self.advancedSearch = advancedSearch
        self.keyword = keyword
        self.advancedFilter = advancedFilter
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case advancedSearch
        case keyword
        case advancedFilter
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(advancedSearch, forKey: .advancedSearch)
        try container.encodeIfPresent(keyword, forKey: .keyword)
        try container.encodeIfPresent(advancedFilter, forKey: .advancedFilter)
    }

    public static func == (lhs: BaseFilter, rhs: BaseFilter) -> Bool {
        lhs.advancedSearch == rhs.advancedSearch &&
        lhs.keyword == rhs.keyword &&
        lhs.advancedFilter == rhs.advancedFilter
        
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(advancedSearch?.hashValue)
        hasher.combine(keyword?.hashValue)
        hasher.combine(advancedFilter?.hashValue)
        
    }
}

