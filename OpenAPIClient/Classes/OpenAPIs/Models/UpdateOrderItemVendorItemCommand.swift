//
// UpdateOrderItemVendorItemCommand.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public final class UpdateOrderItemVendorItemCommand: Codable, JSONEncodable, Hashable {

    public var batchId: Int64?
    public var orderItemId: Int64?
    public var vendorId: Int64?
    public var productPriceId: Int64?

    public init(batchId: Int64? = nil, orderItemId: Int64? = nil, vendorId: Int64? = nil, productPriceId: Int64? = nil) {
        self.batchId = batchId
        self.orderItemId = orderItemId
        self.vendorId = vendorId
        self.productPriceId = productPriceId
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case batchId
        case orderItemId
        case vendorId
        case productPriceId
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(batchId, forKey: .batchId)
        try container.encodeIfPresent(orderItemId, forKey: .orderItemId)
        try container.encodeIfPresent(vendorId, forKey: .vendorId)
        try container.encodeIfPresent(productPriceId, forKey: .productPriceId)
    }

    public static func == (lhs: UpdateOrderItemVendorItemCommand, rhs: UpdateOrderItemVendorItemCommand) -> Bool {
        lhs.batchId == rhs.batchId &&
        lhs.orderItemId == rhs.orderItemId &&
        lhs.vendorId == rhs.vendorId &&
        lhs.productPriceId == rhs.productPriceId
        
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(batchId?.hashValue)
        hasher.combine(orderItemId?.hashValue)
        hasher.combine(vendorId?.hashValue)
        hasher.combine(productPriceId?.hashValue)
        
    }
}

