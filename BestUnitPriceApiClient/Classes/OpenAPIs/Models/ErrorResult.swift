//
// ErrorResult.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ErrorResult: Codable, JSONEncodable, Hashable {

    public var messages: [String]?
    public var source: String?
    public var exception: String?
    public var errorId: String?
    public var supportMessage: String?
    public var statusCode: Int?

    public init(messages: [String]? = nil, source: String? = nil, exception: String? = nil, errorId: String? = nil, supportMessage: String? = nil, statusCode: Int? = nil) {
        self.messages = messages
        self.source = source
        self.exception = exception
        self.errorId = errorId
        self.supportMessage = supportMessage
        self.statusCode = statusCode
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case messages
        case source
        case exception
        case errorId
        case supportMessage
        case statusCode
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(messages, forKey: .messages)
        try container.encodeIfPresent(source, forKey: .source)
        try container.encodeIfPresent(exception, forKey: .exception)
        try container.encodeIfPresent(errorId, forKey: .errorId)
        try container.encodeIfPresent(supportMessage, forKey: .supportMessage)
        try container.encodeIfPresent(statusCode, forKey: .statusCode)
    }
}

