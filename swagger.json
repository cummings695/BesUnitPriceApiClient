{
  "x-generator": "NSwag v13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": ".NET 7.0 WebAPI - BestUnitPrice",
    "description": "BESTUNITPRICE WebApi",
    "contact": {
      "name": "Matthew Cummings",
      "url": "https://linkedin.com/in/mattcummings",
      "email": "cummings695@gmail.com"
    },
    "license": {
      "name": "MIT License",
      "url": "https://github.com/fullstackhero/dotnet-webapi-boilerplate/blob/main/LICENSE"
    },
    "version": "v1.0.0"
  },
  "servers": [
    {
      "url": "https://localhost:5001"
    }
  ],
  "paths": {
    "/api/tokens": {
      "post": {
        "tags": [
          "Tokens"
        ],
        "summary": "Request an access token using credentials.",
        "operationId": "Tokens_GetToken",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/tokens/refresh": {
      "post": {
        "tags": [
          "Tokens"
        ],
        "summary": "Request an access token using a refresh token.",
        "operationId": "Tokens_Refresh",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get list of all users.",
        "operationId": "Users_GetList",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDetailsDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Creates a new user.",
        "operationId": "Users_Create",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get a user's details.",
        "operationId": "Users_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDetailsDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Updates a user.",
        "operationId": "Users_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/users/{id}/roles": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get a user's roles.",
        "operationId": "Users_GetRoles",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserRoleDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Update a user's assigned roles.",
        "operationId": "Users_AssignRoles",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRolesRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/users/self-register": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Anonymous user creates a user.",
        "operationId": "Users_SelfRegister",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "guid"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{id}/toggle-status": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Toggle a user's active status.",
        "operationId": "Users_ToggleStatus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ToggleUserStatusRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/users/confirm-email": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Confirm email address for a user.",
        "operationId": "Users_ConfirmEmail",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "code",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/confirm-phone-number": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Confirm phone number for a user.",
        "operationId": "Users_ConfirmPhoneNumber",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "code",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/forgot-password": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Request a password reset email for a user.",
        "operationId": "Users_ForgotPassword",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/reset-password": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Reset a user's password.",
        "operationId": "Users_ResetPassword",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/batches": {
      "get": {
        "tags": [
          "Batches"
        ],
        "operationId": "Batches_Get",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "statusCode",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 3
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "hydrationLevel",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 2,
              "nullable": true
            },
            "x-position": 5
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginationResponseOfBatchDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Batches"
        ],
        "operationId": "Batches_Post",
        "requestBody": {
          "x-name": "newBatch",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchViewModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchViewModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/batches/pending": {
      "get": {
        "tags": [
          "Batches"
        ],
        "operationId": "Batches_GetPending",
        "parameters": [
          {
            "name": "hydrationLevel",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 2,
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchViewModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/batches/{id}": {
      "get": {
        "tags": [
          "Batches"
        ],
        "operationId": "Batches_Get2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchViewModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Batches"
        ],
        "operationId": "Batches_Put",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchViewModel"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Batches"
        ],
        "operationId": "Batches_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/batches/{id}/header": {
      "get": {
        "tags": [
          "Batches"
        ],
        "operationId": "Batches_GetHeader",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchViewModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/batches/{id}/add": {
      "post": {
        "tags": [
          "Batches"
        ],
        "operationId": "Batches_AddOrderItem",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "orderItemViewModel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddOrderItemViewModel"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchViewModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/batches/{batchId}/items/{id}": {
      "delete": {
        "tags": [
          "Batches"
        ],
        "operationId": "Batches_DeleteOrderItem",
        "parameters": [
          {
            "name": "batchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchViewModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/batches/{id}/status/{statusCode}": {
      "post": {
        "tags": [
          "Batches"
        ],
        "operationId": "Batches_UpdateStatus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "statusCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchViewModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/batches/{batchId}/item/vendor": {
      "post": {
        "tags": [
          "Batches"
        ],
        "operationId": "Batches_UpdateOrderItemVendor",
        "parameters": [
          {
            "name": "batchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrderItemVendorItemCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/batches/{id}/pdf": {
      "get": {
        "tags": [
          "Batches"
        ],
        "operationId": "Batches_GetPdf",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/inventoryitems/search": {
      "post": {
        "tags": [
          "InventoryItems"
        ],
        "summary": "Search Items using available filters.",
        "operationId": "InventoryItems_SearchPOST",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetInventoryItemsQuery"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedListViewModelOfInventoryItemDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "get": {
        "tags": [
          "InventoryItems"
        ],
        "operationId": "InventoryItems_SearchGET",
        "parameters": [
          {
            "name": "SearchTerm",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 3
          },
          {
            "name": "OrderBy",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string"
              }
            },
            "x-position": 4
          },
          {
            "name": "AdvancedSearch.Fields",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string"
              }
            },
            "x-position": 5
          },
          {
            "name": "AdvancedSearch.Keyword",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "Keyword",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "AdvancedFilter.Logic",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 8
          },
          {
            "name": "AdvancedFilter.Filters",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "$ref": "#/components/schemas/Filter"
              }
            },
            "x-position": 9
          },
          {
            "name": "AdvancedFilter.Field",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 10
          },
          {
            "name": "AdvancedFilter.Operator",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 11
          },
          {
            "name": "AdvancedFilter.Value",
            "in": "query",
            "schema": {
              "nullable": true
            },
            "x-position": 12
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginationResponseOfInventoryItemDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/inventoryitems": {
      "get": {
        "tags": [
          "InventoryItems"
        ],
        "operationId": "InventoryItems_Find",
        "parameters": [
          {
            "name": "ZoneId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "OrderCode",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "RestaurantId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "HydrationLevel",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "Active",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 8
          },
          {
            "name": "Sort",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-position": 9
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedListViewModelOfInventoryItemDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "InventoryItems"
        ],
        "operationId": "InventoryItems_Post",
        "requestBody": {
          "x-name": "newInventoryItem",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInventoryItemCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/inventoryitems/{id}": {
      "get": {
        "tags": [
          "InventoryItems"
        ],
        "operationId": "InventoryItems_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InventoryItemDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "InventoryItems"
        ],
        "operationId": "InventoryItems_Put",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InventoryItemPutViewModel"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "InventoryItems"
        ],
        "operationId": "InventoryItems_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/inventoryitems/{id}/vendor/price/average": {
      "get": {
        "tags": [
          "InventoryItems"
        ],
        "operationId": "InventoryItems_GetAverageVendorPricing",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "vendorId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/inventoryitems/{id}/price/average": {
      "get": {
        "tags": [
          "InventoryItems"
        ],
        "operationId": "InventoryItems_GetAveragePricing",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/inventoryitems/{id}/vendor/{vendorId}": {
      "patch": {
        "tags": [
          "InventoryItems"
        ],
        "operationId": "InventoryItems_PatchVendor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "vendorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductPricePatchViewModel"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "InventoryItems"
        ],
        "operationId": "InventoryItems_AddVendor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          },
          {
            "name": "vendorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInventoryItemVendorPriceCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "InventoryItems"
        ],
        "operationId": "InventoryItems_UpdateVendor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          },
          {
            "name": "vendorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInventoryItemVendorPriceCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/inventoryitems/{id}/vendor/{productPriceId}": {
      "delete": {
        "tags": [
          "InventoryItems"
        ],
        "operationId": "InventoryItems_DeleteVendor",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "productPriceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/inventoryitems/{id}/vendor/{vendorId}/price/history": {
      "get": {
        "tags": [
          "InventoryItems"
        ],
        "operationId": "InventoryItems_GetProductVendorPriceHistory",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "vendorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/inventoryitems/pdf": {
      "get": {
        "tags": [
          "InventoryItems"
        ],
        "operationId": "InventoryItems_GetPdf",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/inventoryitems/mock": {
      "post": {
        "tags": [
          "InventoryItems"
        ],
        "operationId": "InventoryItems_AddMockInventoryItems",
        "requestBody": {
          "x-name": "postData",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MockInventoryItemsPostDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/invitations/{id}": {
      "get": {
        "tags": [
          "Invitations"
        ],
        "operationId": "Invitations_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvitationViewModel"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/invitations/invite": {
      "post": {
        "tags": [
          "Invitations"
        ],
        "operationId": "Invitations_CreateInvitation",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "postData",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvitationPostViewModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/invitations/{id}/accept": {
      "post": {
        "tags": [
          "Invitations"
        ],
        "operationId": "Invitations_AcceptInvitation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "x-position": 2
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "data",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AcceptInvitationPostViewModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/orderitems/{id}": {
      "get": {
        "tags": [
          "OrderItems"
        ],
        "operationId": "OrderItems_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "OrderItems"
        ],
        "operationId": "OrderItems_Put",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "model",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrderItemCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/orders": {
      "get": {
        "tags": [
          "Orders"
        ],
        "operationId": "Orders_Get",
        "parameters": [
          {
            "name": "RestaurantId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Statuses",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string"
              }
            },
            "x-position": 2
          },
          {
            "name": "StartDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "EndDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "HydrationLevel",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 5
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 6
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 8
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Orders"
        ],
        "operationId": "Orders_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/orders/{id}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "operationId": "Orders_Get2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderViewModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Orders"
        ],
        "operationId": "Orders_Put",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderPutViewModel"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/orders/{id}/status/{status}": {
      "post": {
        "tags": [
          "Orders"
        ],
        "operationId": "Orders_UpdateStatus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "status",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/OrderStatus"
            },
            "x-position": 2
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/orders/{id}/pdf": {
      "get": {
        "tags": [
          "Orders"
        ],
        "operationId": "Orders_GetPdf",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/personal/settings": {
      "put": {
        "tags": [
          "Personal"
        ],
        "operationId": "Personal_UpdateUserSettings",
        "requestBody": {
          "x-name": "settings",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserSettingsCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/personal": {
      "get": {
        "tags": [
          "Personal"
        ],
        "summary": "Get profile details of currently logged in user.",
        "operationId": "Personal_GetProfile",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDetailsDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Personal"
        ],
        "summary": "Update profile details of currently logged in user.",
        "operationId": "Personal_UpdateProfile",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/personal/password": {
      "put": {
        "tags": [
          "Personal"
        ],
        "summary": "Change Password of currently logged in user.",
        "operationId": "Personal_ChangePassword",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/personal/permissions": {
      "get": {
        "tags": [
          "Personal"
        ],
        "summary": "Get permissions of currently logged in user.",
        "operationId": "Personal_GetPermissions",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/personal/restuarants": {
      "get": {
        "tags": [
          "Personal"
        ],
        "operationId": "Personal_GetCurrentUserRestaurants",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginationResponseOfRestaurantDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/personal/logs": {
      "get": {
        "tags": [
          "Personal"
        ],
        "summary": "Get audit logs of currently logged in user.",
        "operationId": "Personal_GetLogs",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AuditDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/personal/owner": {
      "get": {
        "tags": [
          "Personal"
        ],
        "operationId": "Personal_GetCurrentUserIsOwner",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/registration": {
      "post": {
        "tags": [
          "Registration"
        ],
        "operationId": "Registration_Register",
        "requestBody": {
          "x-name": "registration",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterViewModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserViewModel"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/registration/confirm": {
      "post": {
        "tags": [
          "Registration"
        ],
        "operationId": "Registration_ConfirmRegistration",
        "parameters": [
          {
            "name": "accountid",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserViewModel"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/registration/forgotpassword": {
      "post": {
        "tags": [
          "Registration"
        ],
        "operationId": "Registration_ForgotPassword",
        "requestBody": {
          "x-name": "post",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotPasswordPost"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserViewModel"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/registration/resetpassword": {
      "post": {
        "tags": [
          "Registration"
        ],
        "operationId": "Registration_ResetPassword",
        "requestBody": {
          "x-name": "post",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordPost"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserViewModel"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/restaurants": {
      "get": {
        "tags": [
          "Restaurants"
        ],
        "operationId": "Restaurants_GetAll",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RestaurantDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Restaurants"
        ],
        "operationId": "Restaurants_Post",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRestaurantCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/restaurants/mine": {
      "get": {
        "tags": [
          "Restaurants"
        ],
        "operationId": "Restaurants_GetCurrentUserRestaurants",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/restaurants/current/product": {
      "post": {
        "tags": [
          "Restaurants"
        ],
        "operationId": "Restaurants_AddProductToRestaurant",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddProductToRestaurantCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": ""
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpValidationProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/restaurants/{id}": {
      "get": {
        "tags": [
          "Restaurants"
        ],
        "operationId": "Restaurants_Get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RestaurantViewModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Restaurants"
        ],
        "summary": "Update a restaurant",
        "operationId": "Restaurants_Put",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRestaurantCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Restaurants"
        ],
        "operationId": "Restaurants_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/restaurants/{id}/import": {
      "put": {
        "tags": [
          "Restaurants"
        ],
        "operationId": "Restaurants_Import",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SeedRestaurantCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/restaurantusers": {
      "get": {
        "tags": [
          "RestaurantUsers"
        ],
        "operationId": "RestaurantUsers_Get",
        "parameters": [
          {
            "name": "restaurantId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserViewModel"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "RestaurantUsers"
        ],
        "operationId": "RestaurantUsers_Post",
        "parameters": [
          {
            "name": "restaurantId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/restaurantusers/invite": {
      "post": {
        "tags": [
          "RestaurantUsers"
        ],
        "operationId": "RestaurantUsers_CreateInvitation",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "postData",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvitationPostViewModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/restaurantusers/{id}": {
      "delete": {
        "tags": [
          "RestaurantUsers"
        ],
        "operationId": "RestaurantUsers_Delete",
        "parameters": [
          {
            "name": "restaurantId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/states": {
      "get": {
        "tags": [
          "States"
        ],
        "operationId": "States_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StateViewModel"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/units/search": {
      "post": {
        "tags": [
          "Units"
        ],
        "summary": "Search Units of Measure using available filters.",
        "operationId": "Units_Search",
        "requestBody": {
          "x-name": "query",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetPagedUnitsQuery"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginationResponseOfUnitDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/units": {
      "get": {
        "tags": [
          "Units"
        ],
        "summary": "Search Units of Measure using available filters.",
        "operationId": "Units_Get",
        "parameters": [
          {
            "name": "Name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "Sort",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "Page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 3
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 4
          },
          {
            "name": "OrderBy",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string"
              }
            },
            "x-position": 5
          },
          {
            "name": "AdvancedSearch.Fields",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "string"
              }
            },
            "x-position": 6
          },
          {
            "name": "AdvancedSearch.Keyword",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 7
          },
          {
            "name": "Keyword",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 8
          },
          {
            "name": "AdvancedFilter.Logic",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 9
          },
          {
            "name": "AdvancedFilter.Filters",
            "in": "query",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "nullable": true,
              "items": {
                "$ref": "#/components/schemas/Filter"
              }
            },
            "x-position": 10
          },
          {
            "name": "AdvancedFilter.Field",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 11
          },
          {
            "name": "AdvancedFilter.Operator",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 12
          },
          {
            "name": "AdvancedFilter.Value",
            "in": "query",
            "schema": {
              "nullable": true
            },
            "x-position": 13
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginationResponseOfUnitDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Units"
        ],
        "summary": "Create a new Unit of Measure.",
        "operationId": "Units_Create",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUnitCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/units/{id}": {
      "get": {
        "tags": [
          "Units"
        ],
        "summary": "Get a Unit of Measure.",
        "operationId": "Units_Get2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnitDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Units"
        ],
        "summary": "Update a Unit of Measure.",
        "operationId": "Units_Put",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUnitCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Units"
        ],
        "summary": "Delete a Unit of Measure.",
        "operationId": "Units_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/vendor/{vendorId}/locations": {
      "get": {
        "tags": [
          "VendorLocations"
        ],
        "operationId": "VendorLocations_Get",
        "parameters": [
          {
            "name": "vendorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorViewModel"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "VendorLocations"
        ],
        "operationId": "VendorLocations_Post",
        "parameters": [
          {
            "name": "vendorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "newLocation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BaseVendorLocationViewModel"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/vendor/{vendorId}/locations/{id}": {
      "get": {
        "tags": [
          "VendorLocations"
        ],
        "operationId": "VendorLocations_Get2",
        "parameters": [
          {
            "name": "vendorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 2
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "VendorLocations"
        ],
        "operationId": "VendorLocations_Put",
        "parameters": [
          {
            "name": "vendorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 2
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          }
        ],
        "requestBody": {
          "x-name": "updatedLocation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VendorLocationViewModel"
              }
            }
          },
          "required": true,
          "x-position": 3
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "VendorLocations"
        ],
        "operationId": "VendorLocations_Delete",
        "parameters": [
          {
            "name": "vendorId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 2
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/vendors": {
      "get": {
        "tags": [
          "Vendors"
        ],
        "operationId": "Vendors_Get",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "active",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "name asc",
              "nullable": true
            },
            "x-position": 5
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 6
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VendorViewModel"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Vendors"
        ],
        "operationId": "Vendors_Post",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "newVendor",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostVendorViewModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/vendors/{id}": {
      "get": {
        "tags": [
          "Vendors"
        ],
        "operationId": "Vendors_Get2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Vendors"
        ],
        "operationId": "Vendors_Put",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          }
        ],
        "requestBody": {
          "x-name": "updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VendorPutViewModel"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Vendors"
        ],
        "operationId": "Vendors_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/vendors/{id}/items": {
      "get": {
        "tags": [
          "Vendors"
        ],
        "operationId": "Vendors_GetItems",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 3
          },
          {
            "name": "sortDir",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 4
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 5
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/vendors/{id}/pdf": {
      "get": {
        "tags": [
          "Vendors"
        ],
        "operationId": "Vendors_GetPdf",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          },
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/zones/search": {
      "post": {
        "tags": [
          "Zones"
        ],
        "summary": "Search zones using available filters.",
        "operationId": "Zones_Search",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchZonesRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginationResponseOfZoneDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/zones": {
      "get": {
        "tags": [
          "Zones"
        ],
        "summary": "Get All zones.",
        "operationId": "Zones_Get",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Zones"
        ],
        "operationId": "Zones_Post",
        "requestBody": {
          "x-name": "newZone",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BaseZoneViewModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/zones/{id}": {
      "get": {
        "tags": [
          "Zones"
        ],
        "summary": "Get Zone details.",
        "operationId": "Zones_Get2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ZoneDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Zones"
        ],
        "operationId": "Zones_Put",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ZonePutViewModel"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Zones"
        ],
        "operationId": "Zones_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/roles": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Get a list of all roles.",
        "operationId": "Roles_GetList",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "Roles"
        ],
        "summary": "Create or update a role.",
        "operationId": "Roles_RegisterRole",
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrUpdateRoleRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/roles/{id}": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Get role details.",
        "operationId": "Roles_GetById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Roles"
        ],
        "summary": "Delete a role.",
        "operationId": "Roles_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/roles/{id}/permissions": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Get role details with its permissions.",
        "operationId": "Roles_GetByIdWithPermissions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      },
      "put": {
        "tags": [
          "Roles"
        ],
        "summary": "Update a role's permissions.",
        "operationId": "Roles_UpdatePermissions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRolePermissionsRequest"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    },
    "/api/roles/permissions": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Get role details with its permissions.",
        "operationId": "Roles_GetPermissions",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "TokenResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "token": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          },
          "refreshTokenExpiryTime": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "TokenRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "username",
          "password"
        ],
        "properties": {
          "username": {
            "type": "string",
            "minLength": 1,
            "pattern": "^[^@]+@[^@]+$",
            "nullable": false
          },
          "password": {
            "type": "string",
            "minLength": 1,
            "nullable": false
          }
        }
      },
      "HttpValidationProblemDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProblemDetails"
          },
          {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            },
            "properties": {
              "errors": {
                "type": "object",
                "additionalProperties": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ]
      },
      "ProblemDetails": {
        "type": "object",
        "additionalProperties": {
          "nullable": true
        },
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "ErrorResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "source": {
            "type": "string",
            "nullable": true
          },
          "exception": {
            "type": "string",
            "nullable": true
          },
          "errorId": {
            "type": "string",
            "nullable": true
          },
          "supportMessage": {
            "type": "string",
            "nullable": true
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "RefreshTokenRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "token": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          }
        }
      },
      "UserDetailsDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "friendlyName": {
            "type": "string"
          },
          "fullName": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "userName": {
            "type": "string"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string"
          },
          "isEnabled": {
            "type": "boolean"
          },
          "emailConfirmed": {
            "type": "boolean"
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "merchantGatewayId": {
            "type": "string",
            "nullable": true
          },
          "pricingOverride": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "normalizedUserName": {
            "type": "string"
          },
          "normalizedEmail": {
            "type": "string"
          },
          "configuration": {
            "type": "string",
            "nullable": true
          },
          "lockoutEnd": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "selectedRestaurantId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "UserRoleDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "roleId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "roleName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          }
        }
      },
      "UserRolesRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "userRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserRoleDto"
            }
          }
        }
      },
      "CreateUserRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "firstName",
          "lastName",
          "email",
          "userName",
          "password",
          "confirmPassword"
        ],
        "properties": {
          "firstName": {
            "type": "string",
            "minLength": 1,
            "nullable": false
          },
          "lastName": {
            "type": "string",
            "minLength": 1,
            "nullable": false
          },
          "email": {
            "type": "string",
            "minLength": 1,
            "pattern": "^[^@]+@[^@]+$",
            "nullable": false
          },
          "userName": {
            "type": "string",
            "minLength": 1,
            "nullable": false
          },
          "password": {
            "type": "string",
            "minLength": 1,
            "nullable": false
          },
          "confirmPassword": {
            "type": "string",
            "minLength": 1,
            "nullable": false
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "merchantGatewayId": {
            "type": "string",
            "nullable": true
          },
          "emailConfirmed": {
            "type": "boolean"
          },
          "isActive": {
            "type": "boolean"
          },
          "selectedRestaurantId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "UpdateUserRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "firstName",
          "lastName",
          "email"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "guid",
            "minLength": 1,
            "nullable": false
          },
          "firstName": {
            "type": "string",
            "maxLength": 50,
            "minLength": 1,
            "nullable": false
          },
          "lastName": {
            "type": "string",
            "maxLength": 50,
            "minLength": 1,
            "nullable": false
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "minLength": 1,
            "pattern": "^[^@]+@[^@]+$",
            "nullable": false
          },
          "configuration": {
            "type": "string",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "nullable": true
          },
          "monthlyPrice": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "roles": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ToggleUserStatusRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "activateUser": {
            "type": "boolean"
          },
          "userId": {
            "type": "string",
            "format": "guid",
            "nullable": true
          }
        }
      },
      "ForgotPasswordRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "email"
        ],
        "properties": {
          "email": {
            "type": "string",
            "minLength": 1,
            "pattern": "^[^@]+@[^@]+$",
            "nullable": false
          }
        }
      },
      "ResetPasswordRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "token": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PaginationResponseOfBatchDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BatchDto"
            }
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "hasPreviousPage": {
            "type": "boolean"
          },
          "hasNextPage": {
            "type": "boolean"
          }
        }
      },
      "BatchDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "number": {
            "type": "integer",
            "format": "int64"
          },
          "orders": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/OrderDto"
            }
          },
          "owner": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/RestaurantDto"
              }
            ]
          },
          "status": {
            "$ref": "#/components/schemas/BatchStatus"
          },
          "deactivatedVendors": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/VendorDto"
            }
          },
          "costSavings": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CostSavingsDto"
              }
            ]
          },
          "active": {
            "type": "boolean"
          },
          "orderDate": {
            "type": "string",
            "format": "date-time"
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "OrderDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "totalPrice": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "estimatedPrice": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItemDto"
            }
          },
          "itemsCount": {
            "type": "integer",
            "format": "int32"
          },
          "vendorId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "vendor": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/VendorDto"
              }
            ]
          },
          "active": {
            "type": "boolean",
            "nullable": true
          },
          "statusId": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "$ref": "#/components/schemas/OrderStatus"
          },
          "batchId": {
            "type": "integer",
            "format": "int64"
          },
          "invoice": {
            "type": "string",
            "nullable": true
          },
          "deliveryDate": {
            "type": "string",
            "format": "date-time"
          },
          "orderDate": {
            "type": "string",
            "format": "date-time"
          },
          "number": {
            "type": "string"
          }
        }
      },
      "OrderItemDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "brand": {
            "type": "string",
            "nullable": true
          },
          "unitPrice": {
            "type": "number",
            "format": "decimal"
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "receivedQuantity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "itemPrice": {
            "type": "number",
            "format": "decimal"
          },
          "receivedPrice": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "receivedUnitPrice": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "orderCode": {
            "type": "string",
            "nullable": true
          },
          "totalPrice": {
            "type": "number",
            "format": "decimal"
          },
          "receivedTotal": {
            "type": "number",
            "format": "decimal"
          },
          "inventoryItemId": {
            "type": "integer",
            "format": "int64"
          },
          "inventoryItem": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/InventoryItemDto"
              }
            ]
          },
          "productPriceId": {
            "type": "integer",
            "format": "int64"
          },
          "currentInventory": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "orderId": {
            "type": "integer",
            "format": "int64"
          },
          "createdBy": {
            "type": "string"
          },
          "lastModifiedBy": {
            "type": "string"
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "lostSavings": {
            "type": "number",
            "format": "decimal"
          },
          "received": {
            "type": "boolean"
          }
        }
      },
      "InventoryItemDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "baseQuantity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "currentQuantity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "orderAmount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "zone": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ZoneDto"
              }
            ]
          },
          "shelvingUnit": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ShelvingUnitDto"
              }
            ]
          },
          "shelfNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "nullable": true
          },
          "ownerId": {
            "type": "integer",
            "format": "int64"
          },
          "zoneId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "shelvingUnitId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "name": {
            "type": "string"
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "prices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductPriceDto"
            }
          },
          "defaultUnitOfMeasureId": {
            "type": "integer",
            "format": "int64"
          },
          "defaultUnitOfMeasure": {
            "$ref": "#/components/schemas/UnitDto"
          },
          "defaultQuantity": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "defaultCount": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          }
        }
      },
      "ZoneDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          },
          "shelvingUnits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShelvingUnitDto"
            }
          }
        }
      },
      "ShelvingUnitDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "unitNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "shelfAmount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ProductPriceDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "comparison": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "vendorId": {
            "type": "integer",
            "format": "int64"
          },
          "vendor": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/VendorDto"
              }
            ]
          },
          "productInfoId": {
            "type": "integer",
            "format": "int64"
          },
          "productInfo": {
            "$ref": "#/components/schemas/ProductInfoDto"
          },
          "deleted": {
            "type": "boolean"
          },
          "vendorDeleted": {
            "type": "boolean"
          }
        }
      },
      "VendorDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "contactName": {
            "type": "string",
            "nullable": true
          },
          "addressLine1": {
            "type": "string",
            "nullable": true
          },
          "addressLine2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phone1": {
            "type": "string",
            "nullable": true
          },
          "phone2": {
            "type": "string",
            "nullable": true
          },
          "fax": {
            "type": "string",
            "nullable": true
          },
          "cellPhone": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "minimumOrder": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "nullable": true
          },
          "orderTotal": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "incentivePercentage": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          },
          "website": {
            "type": "string",
            "nullable": true
          },
          "contactEmail": {
            "type": "string",
            "nullable": true
          },
          "geoCached": {
            "type": "boolean"
          },
          "deliveryRange": {
            "type": "integer",
            "format": "int32"
          },
          "locations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VendorLocationDto"
            }
          }
        }
      },
      "VendorLocationDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "contactName": {
            "type": "string",
            "nullable": true
          },
          "website": {
            "type": "string",
            "nullable": true
          },
          "addressLine1": {
            "type": "string",
            "nullable": true
          },
          "addressLine2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          },
          "latitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "deliveryRange": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "nullable": true
          },
          "isGeoCoded": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "ProductInfoDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "orderCode": {
            "type": "string",
            "nullable": true
          },
          "brand": {
            "type": "string",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "vendorDescription": {
            "type": "string",
            "nullable": true
          },
          "count": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "unitOfMeasureId": {
            "type": "integer",
            "format": "int64"
          },
          "unitOfMeasure": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/UnitDto"
              }
            ]
          },
          "deselected": {
            "type": "boolean",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "decimal"
          },
          "unitPrice": {
            "type": "number",
            "format": "decimal"
          },
          "isPreferred": {
            "type": "boolean",
            "nullable": true
          },
          "manufacturerCode": {
            "type": "string",
            "nullable": true
          },
          "lastModifiedOn": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "UnitDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "abbreviation": {
            "type": "string"
          }
        }
      },
      "OrderStatus": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Completed",
          "Submitted",
          "Active"
        ],
        "enum": [
          1,
          2,
          3
        ]
      },
      "RestaurantDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "addressLine1": {
            "type": "string"
          },
          "addressLine2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          },
          "geoCached": {
            "type": "boolean"
          }
        }
      },
      "BatchStatus": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Active",
          "Pending"
        ],
        "enum": [
          1,
          2
        ]
      },
      "CostSavingsDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "found": {
            "type": "number",
            "format": "decimal"
          },
          "lost": {
            "type": "number",
            "format": "decimal"
          },
          "net": {
            "type": "number",
            "format": "decimal"
          },
          "netPercent": {
            "type": "number",
            "format": "decimal"
          },
          "total": {
            "type": "number",
            "format": "decimal"
          }
        }
      },
      "BatchViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "number": {
            "type": "string",
            "nullable": true
          },
          "orders": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/OrderViewModel"
            }
          },
          "owner": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/RestaurantViewModel"
              }
            ]
          },
          "status": {
            "$ref": "#/components/schemas/BatchStatus"
          },
          "deactivatedVendors": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/VendorViewModel"
            }
          },
          "costSavings": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CostSavings"
              }
            ]
          },
          "active": {
            "type": "boolean"
          },
          "orderDate": {
            "type": "string",
            "format": "date-time"
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "OrderViewModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseOrderViewModel"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "BaseOrderViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "totalPrice": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "estimatedPrice": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItemViewModel"
            }
          },
          "itemsCount": {
            "type": "integer",
            "format": "int32"
          },
          "vendorId": {
            "type": "integer",
            "format": "int64"
          },
          "vendor": {
            "$ref": "#/components/schemas/VendorViewModel"
          },
          "active": {
            "type": "boolean",
            "nullable": true
          },
          "statusId": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "$ref": "#/components/schemas/OrderStatus"
          },
          "batchId": {
            "type": "integer",
            "format": "int64"
          },
          "invoice": {
            "type": "string"
          },
          "deliveryDate": {
            "type": "string",
            "format": "date-time"
          },
          "orderDate": {
            "type": "string",
            "format": "date-time"
          },
          "number": {
            "type": "string"
          }
        }
      },
      "OrderItemViewModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseOrderItemViewModel"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "BaseOrderItemViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "brand": {
            "type": "string"
          },
          "unitPrice": {
            "type": "number",
            "format": "float"
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "receivedQuantity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "itemPrice": {
            "type": "number",
            "format": "float"
          },
          "receivedPrice": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "receivedUnitPrice": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "orderCode": {
            "type": "string"
          },
          "totalPrice": {
            "type": "number",
            "format": "float"
          },
          "receivedTotal": {
            "type": "number",
            "format": "float"
          },
          "productId": {
            "type": "integer",
            "format": "int64"
          },
          "product": {
            "$ref": "#/components/schemas/ProductViewModel"
          },
          "inventoryItemId": {
            "type": "integer",
            "format": "int64"
          },
          "inventoryItem": {
            "$ref": "#/components/schemas/InventoryItemViewModel"
          },
          "productPriceId": {
            "type": "integer",
            "format": "int64"
          },
          "currentInventory": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "orderId": {
            "type": "integer",
            "format": "int64"
          },
          "createdBy": {
            "type": "string"
          },
          "lastModifiedBy": {
            "type": "string"
          },
          "createDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedOn": {
            "type": "string",
            "format": "date-time"
          },
          "previousVendors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VendorViewModel"
            }
          },
          "lostSavings": {
            "type": "number",
            "format": "decimal"
          },
          "received": {
            "type": "boolean"
          }
        }
      },
      "ProductViewModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseProductViewModel"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "BaseProductViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "prices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductPriceViewModel"
            }
          },
          "defaultUnitOfMeasureId": {
            "type": "integer",
            "format": "int64"
          },
          "defaultUnitOfMeasure": {
            "$ref": "#/components/schemas/UnitViewModel"
          },
          "defaultQuantity": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "defaultCount": {
            "type": "number",
            "format": "float",
            "nullable": true
          }
        }
      },
      "ProductPriceViewModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseProductPriceViewModel"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "BaseProductPriceViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "comparison": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "vendorId": {
            "type": "integer",
            "format": "int64"
          },
          "vendor": {
            "$ref": "#/components/schemas/VendorViewModel"
          },
          "productInfoId": {
            "type": "integer",
            "format": "int64"
          },
          "productInfo": {
            "$ref": "#/components/schemas/ProductInfoViewModel"
          },
          "deleted": {
            "type": "boolean"
          },
          "vendorDeleted": {
            "type": "boolean"
          }
        }
      },
      "VendorViewModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseVendorViewModel"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "BaseVendorViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "contactName": {
            "type": "string"
          },
          "addressLine1": {
            "type": "string"
          },
          "addressLine2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone1": {
            "type": "string"
          },
          "phone2": {
            "type": "string"
          },
          "fax": {
            "type": "string"
          },
          "cellPhone": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "minimumOrder": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "accountNumber": {
            "type": "string"
          },
          "orderTotal": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "incentivePercentage": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "color": {
            "type": "string"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          },
          "website": {
            "type": "string"
          },
          "contactEmail": {
            "type": "string"
          },
          "geoCached": {
            "type": "boolean"
          },
          "deliveryRange": {
            "type": "integer",
            "format": "int32"
          },
          "locations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VendorLocationViewModel"
            }
          }
        }
      },
      "VendorLocationViewModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseVendorLocationViewModel"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "BaseVendorLocationViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "contactName": {
            "type": "string",
            "nullable": true
          },
          "website": {
            "type": "string",
            "nullable": true
          },
          "addressLine1": {
            "type": "string",
            "nullable": true
          },
          "addressLine2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          },
          "latitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "longitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "deliveryRange": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "nullable": true
          },
          "isGeoCoded": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "ProductInfoViewModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseProductInfoViewModel"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "orderCode": {
                "type": "string"
              },
              "brand": {
                "type": "string"
              },
              "quantity": {
                "type": "number",
                "format": "float",
                "nullable": true
              },
              "description": {
                "type": "string"
              },
              "vendorDescription": {
                "type": "string"
              },
              "count": {
                "type": "number",
                "format": "float",
                "nullable": true
              },
              "unitOfMeasureId": {
                "type": "integer",
                "format": "int64"
              },
              "unitOfMeasure": {
                "$ref": "#/components/schemas/UnitViewModel"
              },
              "deselected": {
                "type": "boolean",
                "nullable": true
              },
              "price": {
                "type": "number",
                "format": "float"
              },
              "unitPrice": {
                "type": "number",
                "format": "float"
              },
              "isPreferred": {
                "type": "boolean",
                "nullable": true
              },
              "manufacturerCode": {
                "type": "string"
              },
              "lastModifiedOn": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        ]
      },
      "UnitViewModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseUnitViewModel"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "BaseUnitViewModel": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name",
          "abbreviation"
        ],
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 50,
            "minLength": 1
          },
          "abbreviation": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1
          },
          "locked": {
            "type": "boolean"
          }
        }
      },
      "BaseProductInfoViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "InventoryItemViewModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseInventoryItemViewModel"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "BaseInventoryItemViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "prices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductPriceViewModel"
            }
          },
          "defaultUnitOfMeasureId": {
            "type": "integer",
            "format": "int64"
          },
          "defaultUnitOfMeasure": {
            "$ref": "#/components/schemas/UnitViewModel"
          },
          "defaultQuantity": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "defaultCount": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "baseQuantity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "currentQuantity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "orderAmount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "zone": {
            "$ref": "#/components/schemas/ZoneViewModel"
          },
          "shelvingUnit": {
            "$ref": "#/components/schemas/ShelvingUnitViewModel"
          },
          "shelfNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "nullable": true
          },
          "ownerId": {
            "type": "integer",
            "format": "int64"
          },
          "zoneId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "shelvingUnitId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        }
      },
      "ZoneViewModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseZoneViewModel"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "BaseZoneViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          },
          "shelvingUnits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ShelvingUnitViewModel"
            }
          }
        }
      },
      "ShelvingUnitViewModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseShelvingUnitViewModel"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "BaseShelvingUnitViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "unitNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "shelfAmount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "RestaurantViewModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseRestaurantViewModel"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "BaseRestaurantViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "addressLine1": {
            "type": "string"
          },
          "addressLine2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          },
          "geoCached": {
            "type": "boolean"
          }
        }
      },
      "CostSavings": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "found": {
            "type": "number",
            "format": "decimal"
          },
          "lost": {
            "type": "number",
            "format": "decimal"
          },
          "net": {
            "type": "number",
            "format": "decimal"
          },
          "netPercent": {
            "type": "number",
            "format": "decimal"
          },
          "total": {
            "type": "number",
            "format": "decimal"
          }
        }
      },
      "AddOrderItemViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "inventoryItemId": {
            "type": "integer",
            "format": "int64"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "inventory": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UpdateOrderItemVendorItemCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "batchId": {
            "type": "integer",
            "format": "int64"
          },
          "orderItemId": {
            "type": "integer",
            "format": "int64"
          },
          "vendorId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "productPriceId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PaginatedListViewModelOfInventoryItemDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InventoryItemDto"
            }
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "hasPreviousPage": {
            "type": "boolean"
          },
          "hasNextPage": {
            "type": "boolean"
          }
        }
      },
      "GetInventoryItemsQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "zoneId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "orderCode": {
            "type": "string",
            "nullable": true
          },
          "restaurantId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "hydrationLevel": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "nullable": true
          },
          "page": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "sort": {
            "type": "string"
          }
        }
      },
      "CreateInventoryItemCommand": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name"
        ],
        "properties": {
          "baseQuantity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "currentQuantity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "orderAmount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ownerId": {
            "type": "integer",
            "format": "int64"
          },
          "zoneId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "shelvingUnitId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "shelfNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "nullable": true
          },
          "name": {
            "type": "string",
            "maxLength": 250,
            "minLength": 1,
            "nullable": false
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "defaultUnitOfMeasureId": {
            "type": "integer",
            "format": "int64"
          },
          "defaultQuantity": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "defaultCount": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          }
        }
      },
      "InventoryItemPutViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "defaultUnitOfMeasureId": {
            "type": "integer",
            "format": "int64"
          },
          "defaultQuantity": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "defaultCount": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "baseQuantity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "currentQuantity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "orderAmount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ownerId": {
            "type": "integer",
            "format": "int64"
          },
          "zoneId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "shelvingUnitId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "shelfNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "ProductPricePatchViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "vendorId": {
            "type": "integer",
            "format": "int64"
          },
          "orderCode": {
            "type": "string"
          }
        }
      },
      "CreateInventoryItemVendorPriceCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "inventoryItemId": {
            "type": "integer",
            "format": "int64"
          },
          "vendorId": {
            "type": "integer",
            "format": "int64"
          },
          "quantity": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "count": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "packPrice": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "itemNumber": {
            "type": "string",
            "nullable": true
          },
          "brand": {
            "type": "string",
            "nullable": true
          },
          "vendorDescription": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UpdateInventoryItemVendorPriceCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "inventoryItemId": {
            "type": "integer",
            "format": "int64"
          },
          "vendorId": {
            "type": "integer",
            "format": "int64"
          },
          "deleted": {
            "type": "boolean"
          },
          "productInfoId": {
            "type": "integer",
            "format": "int64"
          },
          "productInfoOrderCode": {
            "type": "string",
            "nullable": true
          },
          "productInfoBrand": {
            "type": "string",
            "nullable": true
          },
          "productInfoQuantity": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "productInfoDescription": {
            "type": "string",
            "nullable": true
          },
          "productInfoVendorDescription": {
            "type": "string",
            "nullable": true
          },
          "productInfoCount": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "productInfoUnitOfMeasureId": {
            "type": "integer",
            "format": "int64"
          },
          "productInfoDeselected": {
            "type": "boolean",
            "nullable": true
          },
          "productInfoPrice": {
            "type": "number",
            "format": "decimal"
          },
          "productInfoUnitPrice": {
            "type": "number",
            "format": "decimal"
          },
          "productInfoIsPreferred": {
            "type": "boolean",
            "nullable": true
          },
          "productInfoManufacturerCode": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PaginationResponseOfInventoryItemDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InventoryItemDto"
            }
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "hasPreviousPage": {
            "type": "boolean"
          },
          "hasNextPage": {
            "type": "boolean"
          }
        }
      },
      "Filter": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "logic": {
            "type": "string",
            "nullable": true
          },
          "filters": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Filter"
            }
          },
          "field": {
            "type": "string",
            "nullable": true
          },
          "operator": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "nullable": true
          }
        }
      },
      "MockInventoryItemsPostDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "count": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "InvitationViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "restaurantId": {
            "type": "integer",
            "format": "int64"
          },
          "restaurant": {
            "$ref": "#/components/schemas/RestaurantViewModel"
          },
          "email": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "updatedBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "updatedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "CreateInvitationPostViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "restaurantId": {
            "type": "integer",
            "format": "int64"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "AcceptInvitationPostViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "invitationId": {
            "type": "string",
            "format": "guid"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "UpdateOrderItemCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "orderId": {
            "type": "integer",
            "format": "int64"
          },
          "orderItemId": {
            "type": "integer",
            "format": "int64"
          },
          "receivedQuantity": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "orderCode": {
            "type": "string",
            "nullable": true
          },
          "receivedPrice": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "receivedUnitPrice": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "received": {
            "type": "boolean"
          }
        }
      },
      "OrderPutViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "deprecated": true,
            "x-deprecatedMessage": "Use CreateDate Instead"
          },
          "totalPrice": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/OrderStatus"
          },
          "invoice": {
            "type": "string",
            "nullable": true
          },
          "deliveryDate": {
            "type": "string",
            "format": "date-time"
          },
          "orderDate": {
            "type": "string",
            "format": "date-time"
          },
          "number": {
            "type": "string"
          }
        }
      },
      "UpdateUserSettingsCommand": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "restaurantId"
        ],
        "properties": {
          "restaurantId": {
            "type": "integer",
            "format": "int32",
            "minLength": 1,
            "nullable": false
          }
        }
      },
      "ChangePasswordRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "password": {
            "type": "string"
          },
          "newPassword": {
            "type": "string"
          },
          "confirmNewPassword": {
            "type": "string"
          }
        }
      },
      "PaginationResponseOfRestaurantDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RestaurantDto"
            }
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "hasPreviousPage": {
            "type": "boolean"
          },
          "hasNextPage": {
            "type": "boolean"
          }
        }
      },
      "AuditDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "userId": {
            "type": "string",
            "format": "guid"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "tableName": {
            "type": "string",
            "nullable": true
          },
          "dateTime": {
            "type": "string",
            "format": "date-time"
          },
          "oldValues": {
            "type": "string",
            "nullable": true
          },
          "newValues": {
            "type": "string",
            "nullable": true
          },
          "affectedColumns": {
            "type": "string",
            "nullable": true
          },
          "primaryKey": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UserViewModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/UserBaseViewModel"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "isLockedOut": {
                "type": "boolean"
              },
              "accountNumber": {
                "type": "string",
                "nullable": true
              },
              "monthlyPrice": {
                "type": "number",
                "format": "decimal",
                "nullable": true
              },
              "roles": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "UserBaseViewModel": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "userName",
          "email"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "userName": {
            "type": "string",
            "maxLength": 200,
            "minLength": 2
          },
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 200,
            "minLength": 0
          },
          "jobTitle": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "configuration": {
            "type": "string",
            "nullable": true
          },
          "selectedRestaurant": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isEnabled": {
            "type": "boolean"
          }
        }
      },
      "RegisterViewModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ReCaptchaViewModel"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "user": {
                "$ref": "#/components/schemas/UserPostViewModel"
              },
              "restaurant": {
                "$ref": "#/components/schemas/RestaurantPostViewModel"
              },
              "billing": {
                "$ref": "#/components/schemas/BillingPostViewModel"
              }
            }
          }
        ]
      },
      "UserPostViewModel": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "email"
        ],
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email",
            "maxLength": 200,
            "minLength": 0
          },
          "password": {
            "type": "string",
            "minLength": 6
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "RestaurantPostViewModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseRestaurantViewModel"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "templateRestaurantId": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "template": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RestaurantTemplatePostViewModel"
                  }
                ]
              }
            }
          }
        ]
      },
      "RestaurantTemplatePostViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "restaurantId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "includeInventoryItems": {
            "type": "boolean"
          },
          "includeZones": {
            "type": "boolean"
          },
          "includeVendorOverrides": {
            "type": "boolean"
          },
          "includeUnitOverrides": {
            "type": "boolean"
          }
        }
      },
      "BillingPostViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "nameOnCard": {
            "type": "string"
          },
          "cardNumber": {
            "type": "string"
          },
          "expirationDate": {
            "type": "string"
          },
          "cCv": {
            "type": "string",
            "minLength": 3
          }
        }
      },
      "ReCaptchaViewModel": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "passKey"
        ],
        "properties": {
          "passKey": {
            "type": "string",
            "minLength": 1
          }
        }
      },
      "ForgotPasswordPost": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ReCaptchaViewModel"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "email"
            ],
            "properties": {
              "email": {
                "type": "string",
                "minLength": 1
              }
            }
          }
        ]
      },
      "ResetPasswordPost": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ReCaptchaViewModel"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "email",
              "password",
              "token"
            ],
            "properties": {
              "email": {
                "type": "string",
                "minLength": 1
              },
              "password": {
                "type": "string",
                "minLength": 1
              },
              "token": {
                "type": "string",
                "minLength": 1
              }
            }
          }
        ]
      },
      "AddProductToRestaurantCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "CreateRestaurantCommand": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name",
          "addressLine1",
          "zipCode"
        ],
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "nullable": false
          },
          "addressLine1": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "nullable": false
          },
          "addressLine2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "zipCode": {
            "type": "string",
            "maxLength": 5,
            "minLength": 1,
            "nullable": false
          },
          "restaurantId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "includeInventoryItems": {
            "type": "boolean"
          },
          "includeZones": {
            "type": "boolean"
          },
          "includeVendorOverrides": {
            "type": "boolean"
          },
          "includeUnitOverrides": {
            "type": "boolean"
          }
        }
      },
      "UpdateRestaurantCommand": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "nullable": false
          },
          "addressLine1": {
            "type": "string"
          },
          "addressLine2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          }
        }
      },
      "SeedRestaurantCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "restaurantId": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "StateViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "abbreviation": {
            "type": "string"
          }
        }
      },
      "PaginationResponseOfUnitDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UnitDto"
            }
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "hasPreviousPage": {
            "type": "boolean"
          },
          "hasNextPage": {
            "type": "boolean"
          }
        }
      },
      "GetPagedUnitsQuery": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaginationFilter"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string",
                "nullable": true
              },
              "sort": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "PaginationFilter": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseFilter"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "page": {
                "type": "integer",
                "format": "int32"
              },
              "pageSize": {
                "type": "integer",
                "format": "int32"
              },
              "orderBy": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "BaseFilter": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "advancedSearch": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Search"
              }
            ]
          },
          "keyword": {
            "type": "string",
            "nullable": true
          },
          "advancedFilter": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Filter"
              }
            ]
          }
        }
      },
      "Search": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "fields": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "keyword": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateUnitCommand": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name",
          "abbreviation"
        ],
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 25,
            "minLength": 1,
            "nullable": false
          },
          "abbreviation": {
            "type": "string",
            "maxLength": 25,
            "minLength": 1,
            "nullable": false
          }
        }
      },
      "UpdateUnitCommand": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name",
          "abbreviation"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "maxLength": 25,
            "minLength": 1,
            "nullable": false
          },
          "abbreviation": {
            "type": "string",
            "maxLength": 25,
            "minLength": 1,
            "nullable": false
          }
        }
      },
      "PostVendorViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "contactName": {
            "type": "string",
            "nullable": true
          },
          "addressLine1": {
            "type": "string",
            "nullable": true
          },
          "addressLine2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phone1": {
            "type": "string",
            "nullable": true
          },
          "phone2": {
            "type": "string",
            "nullable": true
          },
          "fax": {
            "type": "string",
            "nullable": true
          },
          "cellPhone": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "minimumOrder": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "nullable": true
          },
          "orderTotal": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "incentivePercentage": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          },
          "website": {
            "type": "string",
            "nullable": true
          },
          "contactEmail": {
            "type": "string",
            "nullable": true
          },
          "geoCached": {
            "type": "boolean",
            "nullable": true
          },
          "deliveryRange": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "VendorPutViewModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "contactName": {
            "type": "string",
            "nullable": true
          },
          "addressLine1": {
            "type": "string",
            "nullable": true
          },
          "addressLine2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phone1": {
            "type": "string",
            "nullable": true
          },
          "phone2": {
            "type": "string",
            "nullable": true
          },
          "fax": {
            "type": "string",
            "nullable": true
          },
          "cellPhone": {
            "type": "string",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "minimumOrder": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "nullable": true
          },
          "orderTotal": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "incentivePercentage": {
            "type": "number",
            "format": "decimal",
            "nullable": true
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          },
          "website": {
            "type": "string",
            "nullable": true
          },
          "contactEmail": {
            "type": "string",
            "nullable": true
          },
          "geoCached": {
            "type": "boolean"
          },
          "deliveryRange": {
            "type": "integer",
            "format": "int32"
          },
          "locations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VendorLocationViewModel"
            }
          }
        }
      },
      "PaginationResponseOfZoneDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ZoneDto"
            }
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "hasPreviousPage": {
            "type": "boolean"
          },
          "hasNextPage": {
            "type": "boolean"
          }
        }
      },
      "SearchZonesRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaginationFilter"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "ZonePutViewModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseZoneViewModel"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "RoleDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "permissions": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "UpdateRolePermissionsRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "roleId",
          "permissions"
        ],
        "properties": {
          "roleId": {
            "type": "string",
            "format": "guid",
            "minLength": 1,
            "nullable": false
          },
          "permissions": {
            "type": "array",
            "nullable": false,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CreateOrUpdateRoleRequest": {
        "type": "object",
        "additionalProperties": false,
        "required": [
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "guid",
            "nullable": true
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "nullable": false
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "Input your Bearer token to access this API",
        "name": "Authorization",
        "in": "header",
        "scheme": "Bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}